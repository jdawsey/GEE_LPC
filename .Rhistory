test.data <- mesq_pts_s[-training.samples, ]
model_s <- glm(mesq_pres ~., data = train.data, family = binomial) %>%
stepAIC(trace = FALSE)
summary(model_s)
probabilities_s <- model %>% predict(test.data, type = "response")
predicted.classes <- ifelse(probabilities_s > 0.5, "pos", "neg")
mean(predicted.classes == test.data$mesq_pres)
full.model <- glm(mesq_pres ~., data = train.data, family = binomial)
coef(full.model)
step.model <- full.model %>% stepAIC(trace = FALSE)
coef(step.model)
# Make predictions
probabilities <- full.model %>% predict(test.data, type = "response")
predicted.classes <- ifelse(probabilities > 0.5, "pos", "neg")
# Prediction accuracy
observed.classes <- test.data$mesq_pres
mean(predicted.classes == observed.classes)
# Make predictions
probabilities <- predict(step.model, test.data, type = "response")
predicted.classes <- ifelse(probabilities > 0.5, "pos", "neg")
# Prediction accuracy
observed.classes <- test.data$mesq_pres
mean(predicted.classes == observed.classes)
mesq_pts <- read.csv('D:/!!Research/rgee_test/GEE_LPC/point_data/draft_points_drops.csv',
header = TRUE)
head(mesq_pts, 5)
model <- glm(mesq_pres ~., data = mesq_pts, family = binomial)
probabilities <- predict(model, type = "response")
pred_class <- ifelse(probabilities > 0.5, "pos", "neg")
head(pred_class)
predictors <- colnames(mesq_pts)
mydata <- mesq_pts %>%
mutate(logit = log(probabilities/(1 - probabilities))) %>%
gather(key = "predictors", value = "predictor.value", -logit)
ggplot(mydata, aes(logit, predictor.value))+
geom_point(size = 0.5, alpha = 0.5) +
geom_smooth(method = "loess") +
theme_bw() +
facet_wrap(~predictors, scales = "free_y")
plot(model, which = 4, id.n = 3)
mesq_pts <- read.csv('D:/!!Research/rgee_test/GEE_LPC/point_data/draft_points_drops.csv',
header = TRUE)
head(mesq_pts, 5)
model <- glm(mesq_pres ~., data = mesq_pts, family = binomial)
probabilities <- predict(model, type = "response")
pred_class <- ifelse(probabilities > 0.5, "pos", "neg")
head(pred_class)
predictors <- colnames(mesq_pts)
mydata <- mesq_pts %>%
mutate(logit = log(probabilities/(1 - probabilities))) %>%
gather(key = "predictors", value = "predictor.value", -logit)
ggplot(mydata, aes(logit, predictor.value))+
geom_point(size = 0.5, alpha = 0.5) +
geom_smooth(method = "loess") +
theme_bw() +
facet_wrap(~predictors, scales = "free_y")
plot(model, which = 4, id.n = 3)
mesq_pts <- read.csv('D:/!!Research/rgee_test/GEE_LPC/point_data/draft_points_drops.csv',
header = TRUE)
head(mesq_pts, 5)
model <- glm(mesq_pres ~., data = mesq_pts, family = binomial)
probabilities <- predict(model, type = "response")
pred_class <- ifelse(probabilities > 0.5, "pos", "neg")
head(pred_class)
predictors <- colnames(mesq_pts)
mydata <- mesq_pts %>%
mutate(logit = log(probabilities/(1 - probabilities))) %>%
gather(key = "predictors", value = "predictor.value", -logit)
ggplot(mydata, aes(logit, predictor.value))+
geom_point(size = 0.5, alpha = 0.5) +
geom_smooth(method = "loess") +
theme_bw() +
facet_wrap(~predictors, scales = "free_y")
plot(model, which = 4, id.n = 3)
model.data <- augment(model) %>%
mutate(index = 1:n())
model.data %>% top_n(3, .cooksd)
ggplot(model.data, aes(index, .std.resid)) +
geom_point(aes(color = mesq_pres), alpha = .5) +
theme_bw()
model.data %>%
filter(abs(.std.resid) > 3)
car::vif(model)
mesq_pts_s <- read.csv('D:/!!Research/rgee_test/GEE_LPC/point_data/draft_points_drops.csv',
header = TRUE)
set.seed(123)
training.samples <- mesq_pts_s$mesq_pres %>%
createDataPartition(p = 0.7, list = FALSE)
train.data <- mesq_pts_s[training.samples, ]
test.data <- mesq_pts_s[-training.samples, ]
model_s <- glm(mesq_pres ~., data = train.data, family = binomial) %>%
stepAIC(trace = FALSE)
summary(model_s)
probabilities_s <- model %>% predict(test.data, type = "response")
predicted.classes <- ifelse(probabilities_s > 0.5, "pos", "neg")
mean(predicted.classes == test.data$mesq_pres)
full.model <- glm(mesq_pres ~., data = train.data, family = binomial)
coef(full.model)
step.model <- full.model %>% stepAIC(trace = FALSE)
coef(step.model)
# Make predictions
probabilities <- full.model %>% predict(test.data, type = "response")
predicted.classes <- ifelse(probabilities > 0.5, "pos", "neg")
# Prediction accuracy
observed.classes <- test.data$mesq_pres
mean(predicted.classes == observed.classes)
# Make predictions
probabilities <- predict(step.model, test.data, type = "response")
predicted.classes <- ifelse(probabilities > 0.5, "pos", "neg")
# Prediction accuracy
observed.classes <- test.data$mesq_pres
mean(predicted.classes == observed.classes)
mesq_pts <- read.csv('D:/!!Research/rgee_test/GEE_LPC/point_data/draft_points_drops.csv',
header = TRUE)
head(mesq_pts, 5)
model <- glm(mesq_pres ~., data = mesq_pts, family = binomial)
probabilities <- predict(model, type = "response")
pred_class <- ifelse(probabilities > 0.5, "pos", "neg")
head(pred_class)
predictors <- colnames(mesq_pts)
mydata <- mesq_pts %>%
mutate(logit = log(probabilities/(1 - probabilities))) %>%
gather(key = "predictors", value = "predictor.value", -logit)
ggplot(mydata, aes(logit, predictor.value))+
geom_point(size = 0.5, alpha = 0.5) +
geom_smooth(method = "loess") +
theme_bw() +
facet_wrap(~predictors, scales = "free_y")
plot(model, which = 4, id.n = 3)
model.data <- augment(model) %>%
mutate(index = 1:n())
model.data %>% top_n(3, .cooksd)
ggplot(model.data, aes(index, .std.resid)) +
geom_point(aes(color = mesq_pres), alpha = .5) +
theme_bw()
model.data %>%
filter(abs(.std.resid) > 3)
car::vif(model)
mesq_pts_s <- read.csv('D:/!!Research/rgee_test/GEE_LPC/point_data/draft_points_drops.csv',
header = TRUE)
set.seed(123)
training.samples <- mesq_pts_s$mesq_pres %>%
createDataPartition(p = 0.7, list = FALSE)
train.data <- mesq_pts_s[training.samples, ]
test.data <- mesq_pts_s[-training.samples, ]
model_s <- glm(mesq_pres ~., data = train.data, family = binomial) %>%
stepAIC(trace = FALSE)
summary(model_s)
probabilities_s <- model %>% predict(test.data, type = "response")
predicted.classes <- ifelse(probabilities_s > 0.5, "pos", "neg")
mean(predicted.classes == test.data$mesq_pres)
full.model <- glm(mesq_pres ~., data = train.data, family = binomial)
coef(full.model)
step.model <- full.model %>% stepAIC(trace = FALSE)
coef(step.model)
# Make predictions
probabilities <- full.model %>% predict(test.data, type = "response")
predicted.classes <- ifelse(probabilities > 0.5, "pos", "neg")
# Prediction accuracy
observed.classes <- test.data$mesq_pres
mean(predicted.classes == observed.classes)
# Make predictions
probabilities <- predict(step.model, test.data, type = "response")
predicted.classes <- ifelse(probabilities > 0.5, "pos", "neg")
# Prediction accuracy
observed.classes <- test.data$mesq_pres
mean(predicted.classes == observed.classes)
plot(mesq_pts)
install.packages("pscl")
library(pscl)
pscl::pR2(model)["McFadden"]
pscl::pR2(full.model)["McFadden"]
pscl::pR2(step.model)["McFadden"]
# Logistic Regression
# where F is a binary factor and
# x1-x3 are continuous predictors
fit <- glm(mesq_pts ~ annual_precip, data = mesq_pts,family=binomial())
# Logistic Regression
# where F is a binary factor and
# x1-x3 are continuous predictors
fit <- glm(mesq_pts ~ ann_precip, data = mesq_pts,family=binomial())
# Logistic Regression
# where F is a binary factor and
# x1-x3 are continuous predictors
fit <- glm(mesq_pres ~ ann_precip, data = mesq_pts,family=binomial())
summary(fit) # display results
exp(coef(fit)) # exponentiated coefficients
exp(confint(fit)) # 95% CI for exponentiated coefficients
predict(fit, type="response") # predicted values
residuals(fit, type="deviance") # residuals
confint(fit) # 95% CI for the coefficients
fit2 <- glm(mesq_pres ~ ann_precip + ann_mean_temp, data = mesq_pts,family=binomial())
summary(fit2) # display results
confint(fit2) # 95% CI for the coefficients
fit2 <- glm(mesq_pres ~ ann_precip + b2_carbonCont, data = mesq_pts,family=binomial())
fit2 <- glm(mesq_pres ~ ann_precip + b2_carbonCont_10, data = mesq_pts,family=binomial())
summary(fit2) # display results
fit2 <- glm(mesq_pres ~ ann_precip + b3_carbonCont_30, data = mesq_pts,family=binomial())
summary(fit2) # display results
fit2 <- glm(mesq_pres ~ ann_precip + b4_carbonCont_60, data = mesq_pts,family=binomial())
summary(fit2) # display results
fit2 <- glm(mesq_pres ~ ann_precip + b5_carbonCont_100, data = mesq_pts,family=binomial())
summary(fit2) # display results
mesq_pts_m <- read.csv('D:/!!Research/rgee_test/GEE_LPC/point_data/draft_points.csv',
header = TRUE)
fit2 <- glm(mesq_pres ~ ann_precip + b1_sandCont_0, data = mesq_pts,family=binomial())
fit2 <- glm(mesq_pres ~ ann_precip + b1_sandCont_0, data = mesq_pts_m,family=binomial())
summary(fit2) # display results
#predict(fit, type="response") # predicted values
#residuals(fit, type="deviance") # residuals
pscl::pR2(fit)["McFadden"]
pscl::pR2(fit2)["McFadden"]
fit2 <- glm(mesq_pres ~ b1_sandCont_0, data = mesq_pts_m,family=binomial())
summary(fit2) # display results
pscl::pR2(fit2)["McFadden"]
fit2 <- glm(mesq_pres ~ ann_precip + b1_clayCont_0, data = mesq_pts_m,family=binomial())
summary(fit2) # display results
pscl::pR2(fit2)["McFadden"]
fit2 <- glm(mesq_pres ~ ann_precip + b1_soilWater_0, data = mesq_pts_m,family=binomial())
summary(fit2) # display results
pscl::pR2(fit2)["McFadden"]
fit2 <- glm(mesq_pres ~ ann_precip + b2_soilWater_10, data = mesq_pts_m,family=binomial())
summary(fit2) # display results
pscl::pR2(fit2)["McFadden"]
fit2 <- glm(mesq_pres ~ ann_precip + b3_soilWater_30, data = mesq_pts_m,family=binomial())
summary(fit2) # display results
pscl::pR2(fit2)["McFadden"]
fit3 <- glm(mesq_pres ~ ann_precip + b3_soilWater_30
+ b1_sandCont_0, data = mesq_pts_m,family=binomial())
summary(fit3) # display results
pscl::pR2(fit3)["McFadden"]
fit3 <- glm(mesq_pres ~ ann_precip + b1_carbonCont_0
+ b1_sandCont_0, data = mesq_pts_m,family=binomial())
summary(fit3) # display results
pscl::pR2(fit3)["McFadden"]
fit3 <- glm(mesq_pres ~ ann_precip + b1_carbonCont_0
+ dist_road, data = mesq_pts_m,family=binomial())
summary(fit3) # display results
fit3 <- glm(mesq_pres ~ ann_precip
+ dist_road, data = mesq_pts_m,family=binomial())
summary(fit3) # display results
fit3 <- glm(mesq_pres ~ ann_precip
+ b1_carbonCont_0,
data = mesq_pts_m,family=binomial())
summary(fit3) # display results
fit3 <- glm(mesq_pres ~ ann_precip
+ b4_carbonCont_100,
data = mesq_pts_m,family=binomial())
fit3 <- glm(mesq_pres ~ ann_precip
+ b4_carbonCont_60,
data = mesq_pts_m,family=binomial())
summary(fit3) # display results
fit3 <- glm(mesq_pres ~ ann_precip
+ b3_carbonCont_30,
data = mesq_pts_m,family=binomial())
summary(fit3) # display results
pscl::pR2(fit3)["McFadden"]
fit3 <- glm(mesq_pres ~ ann_precip
+ b1_sandCont_0,
data = mesq_pts_m,family=binomial())
summary(fit3) # display results
pscl::pR2(fit3)["McFadden"]
fit3 <- glm(mesq_pres ~ ann_precip
+ b1_sandCont_0 + b1_carbonCont_0,
data = mesq_pts_m,family=binomial())
summary(fit3) # display results
pscl::pR2(fit3)["McFadden"]
fit4 <- glm(mesq_pres ~ ann_precip
+ b1_sandCont_0 + b1_carbonCont_0 + dist_road,
data = mesq_pts_m,family=binomial())
summary(fit4) # display results
confint(fit3) # 95% CI for the coefficients
fit4 <- glm(mesq_pres ~ ann_precip
+ b1_sandCont_0 + b1_carbonCont_0 + ann_temp,
data = mesq_pts_m,family=binomial())
fit4 <- glm(mesq_pres ~ ann_precip
+ b1_sandCont_0 + b1_carbonCont_0 + ann_temp_range,
data = mesq_pts_m,family=binomial())
summary(fit4) # display results
fit4 <- glm(mesq_pres ~ ann_precip
+ b1_sandCont_0 + b1_carbonCont_0 + b1_clayCont_0,
data = mesq_pts_m,family=binomial())
summary(fit4) # display results
pscl::pR2(fit4)["McFadden"]
pscl::pR2(fit3)["McFadden"]
fit4 <- glm(mesq_pres ~ ann_precip
+ b1_sandCont_0 + b1_carbonCont_0 + b1_soilWater_0,
data = mesq_pts_m,family=binomial())
summary(fit4) # display results
pscl::pR2(fit4)["McFadden"]
summary(model)
summary(step.model)
fit4 <- glm(mesq_pres ~ ann_precip
+ b5_clayCont_100 + b4_carbonCont_60,
data = mesq_pts_m,family=binomial())
summary(fit4) # display results
confint(fit4) # 95% CI for the coefficients
pscl::pR2(fit4)["McFadden"]
fit4 <- glm(mesq_pres ~ ann_precip
+ b5_clayCont_100,
data = mesq_pts_m,family=binomial())
summary(fit4) # display results
confint(fit4) # 95% CI for the coefficients
pscl::pR2(fit4)["McFadden"]
fit4 <- glm(mesq_pres ~ ann_precip
+ b1_sandCont_0 + b4_carbonCont_60,
data = mesq_pts_m,family=binomial())
summary(fit4) # display results
fit4 <- glm(mesq_pres ~ ann_precip
+ b1_sandCont_0 + b1_carbonCont_0,
data = mesq_pts_m,family=binomial())
summary(fit4) # display results
confint(fit4) # 95% CI for the coefficients
pscl::pR2(fit4)["McFadden"]
fit4 <- glm(mesq_pres ~ ann_precip
+ b1_sandCont_0 + b1_carbonCont_0 + b3_soilWater_30,
data = mesq_pts_m,family=binomial())
summary(fit4) # display results
fit4 <- glm(mesq_pres ~ ann_precip
+ b1_carbonCont_0 + b3_soilWater_30,
data = mesq_pts_m,family=binomial())
summary(fit4) # display results
confint(fit4) # 95% CI for the coefficients
pscl::pR2(fit4)["McFadden"]
fit4 <- glm(mesq_pres ~ ann_precip
+ b1_carbonCont_0 + b3_soilWater_30 + dist_road,
data = mesq_pts_m,family=binomial())
summary(fit4) # display results
confint(fit4) # 95% CI for the coefficients
pscl::pR2(fit4)["McFadden"]
fit4 <- glm(mesq_pres ~ ann_precip
+ b1_carbonCont_0 + b3_soilWater_30,
data = mesq_pts_m,family=binomial())
fit4 <- glm(mesq_pres ~ ann_precip
+ b1_carbonCont_0 + b3_soilWater_30 + b1_clayCont_0,
data = mesq_pts_m,family=binomial())
summary(fit4) # display results
confint(fit4) # 95% CI for the coefficients
pscl::pR2(fit4)["McFadden"]
confint.default(fit4)
install.packages("aod")
library(aod)
wald.test(b = coef(fit4), Sigma = vcov(fit4), Terms = 4:6)
wald.test(b = coef(fit4), Sigma = vcov(fit4), Terms = 1:3)
wald.test(b = coef(fit4), Sigma = vcov(fit4), Terms = 1:4)
wald.test(b = coef(fit4), Sigma = vcov(fit4), Terms = 2:4)
wald.test(b = coef(fit4), Sigma = vcov(fit4), Terms = 2:5)
exp(coef(fit4)) # exponentiated coefficients
exp(confint(fit4)) # 95% CI for exponentiated coefficients
exp(cbind(OR = coef(fit4), confint(fit4)))
newdata1 <- with(mesq_pts_m, data.frame(ann_precip = mean(ann_precip),
b1_carbonCont_0 = mean(b1_carbonCont_0),
rank = factor(1:4)))
newdata1
newdata1 <- with(mesq_pts_m, data.frame(ann_precip = mean(ann_precip),
b1_carbonCont_0 = mean(b1_carbonCont_0),
b3_soilWater_30 = mean(b3_soilWater_30),
b1_clayCont = factor(1:4)))
newdata1
newdata1 <- with(mesq_pts_m, data.frame(ann_precip = mean(ann_precip),
b1_carbonCont_0 = mean(b1_carbonCont_0),
b3_soilWater_30 = mean(b3_soilWater_30),
b1_clayCont_0 = mean(b1_clayCont_0)))
newdata1
newdata1 <- with(mesq_pts_m, data.frame(ann_precip = mean(ann_precip),
b1_carbonCont_0 = mean(b1_carbonCont_0),
b3_soilWater_30 = mean(b3_soilWater_30),
b1_clayCont_0 = factor(10:30)))
newdata1
newdata1$clayP <- predict(mesq_pts_m, newdata = newdata1, type = "response")
newdata1$clayP <- predict(fit4, newdata = newdata1, type = "response")
newdata1 <- with(mesq_pts_m, data.frame(ann_precip = mean(ann_precip),
b1_carbonCont_0 = mean(b1_carbonCont_0),
b3_soilWater_30 = mean(b3_soilWater_30),
b1_clayCont = factor(10:30)))
newdata1$clayP <- predict(fit4, newdata = newdata1, type = "response")
newdata1 <- with(mesq_pts_m, data.frame(ann_precip = mean(ann_precip),
b1_carbonCont_0 = mean(b1_carbonCont_0),
b3_soilWater_30 = mean(b3_soilWater_30),
b1_clayCont_0 = range(10:30)))
newdata1$clayP <- predict(fit4, newdata = newdata1, type = "response")
newdata1
with(fit4, null.deviance - deviance)
with(fit4, df.null - df.residual)
with(fit4, pchisq(null.deviance - deviance, df.null - df.residual, lower.tail = FALSE))
logLik(fit4)
mesq_pts <- read.csv('D:/!!Research/rgee_test/GEE_LPC/point_data/draft_points.csv',
header = TRUE)
head(mesq_pts, 5)
model <- glm(mesq_pres ~., data = mesq_pts, family = binomial)
probabilities <- predict(model, type = "response")
pred_class <- ifelse(probabilities > 0.5, "pos", "neg")
head(pred_class)
predictors <- colnames(mesq_pts)
mydata <- mesq_pts %>%
mutate(logit = log(probabilities/(1 - probabilities))) %>%
gather(key = "predictors", value = "predictor.value", -logit)
ggplot(mydata, aes(logit, predictor.value))+
geom_point(size = 0.5, alpha = 0.5) +
geom_smooth(method = "loess") +
theme_bw() +
facet_wrap(~predictors, scales = "free_y")
plot(model, which = 4, id.n = 3)
model.data <- augment(model) %>%
mutate(index = 1:n())
model.data %>% top_n(3, .cooksd)
ggplot(model.data, aes(index, .std.resid)) +
geom_point(aes(color = mesq_pres), alpha = .5) +
theme_bw()
model.data %>%
filter(abs(.std.resid) > 3)
car::vif(model)
car::vif(fit4)
logLik(fit3)
logLik(fit3)
logLik(fit2)
logLik(fit1)
logLik(fit)
logLik(model)
logLik(step.model)
fit3 <- glm(mesq_pres ~ ann_precip
+ b5_clayCont_100 + b2_carbonCont_10 + b4_carbonCont_60,
data = mesq_pts_m,family=binomial())
summary(fit3) # display results
logLik(fit3)
car::vif(fit3)
pscl::pR2(fit3)["McFadden"]
summary(fit4) # display results
fit4 <- glm(mesq_pres ~ ann_precip
+ b2_carbonCont_10 + b3_soilWater_30 + b1_clayCont_0,
data = mesq_pts_m,family=binomial())
summary(fit4) # display results
fit4 <- glm(mesq_pres ~ ann_precip
+ b3_carbonCont_30 + b3_soilWater_30 + b1_clayCont_0,
data = mesq_pts_m,family=binomial())
summary(fit4) # display results
fit4 <- glm(mesq_pres ~ ann_precip
+ b4_carbonCont_30 + b3_soilWater_30 + b1_clayCont_0,
data = mesq_pts_m,family=binomial())
fit4 <- glm(mesq_pres ~ ann_precip
+ b4_carbonCont_60 + b3_soilWater_30 + b1_clayCont_0,
data = mesq_pts_m,family=binomial())
summary(fit4) # display results
fit4 <- glm(mesq_pres ~ ann_precip
+ b5_carbonCont_100 + b3_soilWater_30 + b1_clayCont_0,
data = mesq_pts_m,family=binomial())
summary(fit4) # display results
fit4 <- glm(mesq_pres ~ ann_precip
+ b3_carbonCont_30 + b3_soilWater_30 + b1_clayCont_0,
data = mesq_pts_m,family=binomial())
summary(fit4) # display results
fit4 <- glm(mesq_pres ~ ann_precip
+ b2_carbonCont_10 + b3_soilWater_30 + b1_clayCont_0,
data = mesq_pts_m,family=binomial())
summary(fit4) # display results
fit4 <- glm(mesq_pres ~ ann_precip
+ b3_carbonCont_30 + b3_soilWater_30 + b1_clayCont_0,
data = mesq_pts_m,family=binomial())
summary(fit4) # display results
confint(fit4) # 95% CI for the coefficients
pscl::pR2(fit4)["McFadden"]
confint.default(fit4)
car::vif(fit4)
fit4 <- glm(mesq_pres ~ ann_precip
+ b3_carbonCont_30 + b3_soilWater_30 + b3_clayCont_30,
data = mesq_pts_m,family=binomial())
summary(fit4) # display results
fit4 <- glm(mesq_pres ~ ann_precip
+ b3_carbonCont_30 + b3_soilWater_30 + b4_clayCont_60,
data = mesq_pts_m,family=binomial())
summary(fit4) # display results
fit4 <- glm(mesq_pres ~ ann_precip
+ b3_carbonCont_30 + b3_soilWater_30 + b5_clayCont_100,
data = mesq_pts_m,family=binomial())
summary(fit4) # display results
fit4 <- glm(mesq_pres ~ ann_precip
+ b3_carbonCont_30 + b3_soilWater_30 + b1_sandCont_0,
data = mesq_pts_m,family=binomial())
summary(fit4) # display results
fit4 <- glm(mesq_pres ~ ann_precip
+ b3_carbonCont_30 + b3_soilWater_30 + b2_sandCont_10,
data = mesq_pts_m,family=binomial())
summary(fit4) # display results
fit4 <- glm(mesq_pres ~ ann_precip
+ b3_carbonCont_30 + b3_soilWater_30 + b3_sandCont_30,
data = mesq_pts_m,family=binomial())
summary(fit4) # display results
fit4 <- glm(mesq_pres ~ ann_precip
+ b3_carbonCont_30 + b3_soilWater_30 + b4_sandCont_60,
data = mesq_pts_m,family=binomial())
summary(fit4) # display results
fit4 <- glm(mesq_pres ~ ann_precip
+ b3_carbonCont_30 + b3_soilWater_30 + b5_sandCont_100,
data = mesq_pts_m,family=binomial())
summary(fit4) # display results
fit4 <- glm(mesq_pres ~ ann_precip
+ b3_carbonCont_30 + b3_soilWater_30 + b1_clayCont_0,
data = mesq_pts_m,family=binomial())
summary(fit4) # display results
logLik(fit4)
with(fit4, pchisq(null.deviance - deviance, df.null - df.residual, lower.tail = FALSE))
with(fit4, df.null - df.residual)
exp(coef(fit4)) # exponentiated coefficients
exp(confint(fit4)) # 95% CI for exponentiated coefficients
exp(cbind(OR = coef(fit4), confint(fit4)))
fit4.data <- augment(fit4) %>%
mutate(index = 1:n())
fit4.data %>% top_n(3, .cooksd)
ggplot(fit4.data, aes(index, .std.resid)) +
geom_point(aes(color = mesq_pres), alpha = .5) +
theme_bw()
plot(model, which = 4, id.n = 3)
