optical_bands = image.select('SR_B.').multiply(0.0000275).add(-0.2)
thermal_bands = image.select('ST_B6').multiply(0.00341802).add(149.0)
return image.addBands(optical_bands, None, True).addBands(
thermal_bands, None, True
)
compositePy = lsYear.map(apply_scale_factors)
quit
###
composite <- py$compositePy
clip <- composite$clip(shp)
###
compositeR <- py$compositePy
clip <- compositeR$clip(py$shp)
###ee_install()
library(rgee)
library(rgeeExtra)
library(reticulate)
# Initialize Earth Engine and GD
ee_Initialize(drive=TRUE)
###
compositeR <- py$compositePy
clip <- compositeR$clip(py$shp)
###
shp <- ee$FeatureCollection('users/jdawsey/assets/20km_buffer')
compositeR <- py$compositePy
clip <- compositeR$clip(py$shp)
reticulate::repl_python()
import ee
shp = ee.FeatureCollection('users/jdawsey/assets/20km_buffer')
lsYear = ee.ImageCollection('LANDSAT/LTO5/C02/T1_L2').filterDate('1990-06-01', '1990-09-30').filterBounds(shp)
# Applies scaling factors.
def apply_scale_factors(image):
optical_bands = image.select('SR_B.').multiply(0.0000275).add(-0.2)
thermal_bands = image.select('ST_B6').multiply(0.00341802).add(149.0)
return image.addBands(optical_bands, None, True).addBands(
thermal_bands, None, True)
compositePy = lsYear.map(apply_scale_factors)
quit
###
shp <- ee$FeatureCollection('users/jdawsey/assets/20km_buffer')
compositeR <- py$compositePy
clip <- compositeR$clip(py$shp)
### visibility parameters for the color image
visParam <- list(bands <- c('SR_B3', 'SR_B2', 'SR_B1'),
min= 0,
max= 0.3
#gamma = 0.5
)
Map$addLayer(mosaicLS, visParams= visParam)
Map$addLayer(compositeR, visParams= visParam)
reticulate::repl_python()
import ee
shp = ee.FeatureCollection('users/jdawsey/assets/20km_buffer')
lsYear = ee.ImageCollection('LANDSAT/LTO5/C02/T1_L2').filterDate((ee.Date('1990-06-01'), ee.Date('1990-09-30').filterBounds(shp)
# Applies scaling factors.
def apply_scale_factors(image):
optical_bands = image.select('SR_B.').multiply(0.0000275).add(-0.2)
thermal_bands = image.select('ST_B6').multiply(0.00341802).add(149.0)
return image.addBands(optical_bands, None, True).addBands(
thermal_bands, None, True)
compositePy = lsYear.map(apply_scale_factors)
import ee
shp = ee.FeatureCollection('users/jdawsey/assets/20km_buffer')
lsYear = ee.ImageCollection('LANDSAT/LTO5/C02/T1_L2').filterDate((ee.Date('1990-06-01'), ee.Date('1990-09-30').filterBounds(shp)
# Applies scaling factors
def apply_scale_factors(image):
optical_bands = image.select('SR_B.').multiply(0.0000275).add(-0.2)
thermal_bands = image.select('ST_B6').multiply(0.00341802).add(149.0)
return image.addBands(optical_bands, None, True).addBands(
thermal_bands, None, True)
compositePy = lsYear.map(apply_scale_factors)
import ee
shp = ee.FeatureCollection('users/jdawsey/assets/20km_buffer')
lsYear = ee.ImageCollection('LANDSAT/LTO5/C02/T1_L2').filterDate((ee.Date('1990-06-01'), ee.Date('1990-09-30').filterBounds(shp)
def apply_scale_factors(image):
optical_bands = image.select('SR_B.').multiply(0.0000275).add(-0.2)
thermal_bands = image.select('ST_B6').multiply(0.00341802).add(149.0)
return image.addBands(optical_bands, None, True).addBands(
thermal_bands, None, True)
compositePy = lsYear.map(apply_scale_factors)
import ee
shp = ee.FeatureCollection('users/jdawsey/assets/20km_buffer')
lsYear = ee.ImageCollection('LANDSAT/LTO5/C02/T1_L2').filterDate((ee.Date('1990-06-01'), ee.Date('1990-09-30'))).filterBounds(shp)
# applies scaling factors
def apply_scale_factors(image):
optical_bands = image.select('SR_B.').multiply(0.0000275).add(-0.2)
thermal_bands = image.select('ST_B6').multiply(0.00341802).add(149.0)
return image.addBands(optical_bands, None, True).addBands(
thermal_bands, None, True)
compositePy = lsYear.map(apply_scale_factors)
quit
###
shp <- ee$FeatureCollection('users/jdawsey/assets/20km_buffer')
compositeR <- py$compositePy
clip <- compositeR$clip(py$shp)
compositeR <- py$compositePy
reticulate::repl_python()
import ee
shp = ee.FeatureCollection('users/jdawsey/assets/20km_buffer')
lsYear = ee.ImageCollection('LANDSAT/LTO5/C02/T1_L2').filterDate((ee.Date('1990-06-01'), ee.Date('1990-09-30'))).filterBounds(shp)
# applies scaling factors
def apply_scale_factors(image):
optical_bands = image.select('SR_B.').multiply(0.0000275).add(-0.2)
thermal_bands = image.select('ST_B6').multiply(0.00341802).add(149.0)
return image.addBands(optical_bands, None, True).addBands(
thermal_bands, None, True)
compositePy = lsYear.map(apply_scale_factors(image) { return image.clip(geometry); });
import ee
shp = ee.FeatureCollection('users/jdawsey/assets/20km_buffer')
lsYear = ee.ImageCollection('LANDSAT/LTO5/C02/T1_L2').filterDate((ee.Date('1990-06-01'), ee.Date('1990-09-30'))).filterBounds(shp)
# applies scaling factors
def apply_scale_factors(image):
optical_bands = image.select('SR_B.').multiply(0.0000275).add(-0.2)
thermal_bands = image.select('ST_B6').multiply(0.00341802).add(149.0)
return image.addBands(optical_bands, None, True).addBands(
thermal_bands, None, True)
compositePy = lsYear.map(apply_scale_factors(image) { return image.clip(shp); });
import ee
shp = ee.FeatureCollection('users/jdawsey/assets/20km_buffer')
lsYear = ee.ImageCollection('LANDSAT/LTO5/C02/T1_L2').filterDate((ee.Date('1990-06-01'), ee.Date('1990-09-30'))).filterBounds(shp)
# applies scaling factors
def apply_scale_factors(image):
optical_bands = image.select('SR_B.').multiply(0.0000275).add(-0.2)
thermal_bands = image.select('ST_B6').multiply(0.00341802).add(149.0)
return image.addBands(optical_bands, None, True).addBands(
thermal_bands, None, True)
lsYear = lsYear.map(apply_scale_factors)
compositePy = lsYear.mean()
import ee
shp = ee.FeatureCollection('users/jdawsey/assets/20km_buffer')
lsYear = ee.ImageCollection('LANDSAT/LTO5/C02/T1_L2').filterDate((ee.Date('1990-06-01'), ee.Date('1990-09-30'))).filterBounds(shp)
# applies scaling factors
def apply_scale_factors(image):
optical_bands = image.select('SR_B.').multiply(0.0000275).add(-0.2)
thermal_bands = image.select('ST_B6').multiply(0.00341802).add(149.0)
return image.addBands(optical_bands, None, True).addBands(
thermal_bands, None, True)
lsYear = lsYear.map(apply_scale_factors)
lsYear = lsYear.clip()
compositePy = lsYear.mean()
import ee
shp = ee.FeatureCollection('users/jdawsey/assets/20km_buffer')
lsYear = ee.ImageCollection('LANDSAT/LTO5/C02/T1_L2').filterDate((ee.Date('1990-06-01'), ee.Date('1990-09-30'))).filterBounds(shp)
# applies scaling factors
def apply_scale_factors(image):
optical_bands = image.select('SR_B.').multiply(0.0000275).add(-0.2)
thermal_bands = image.select('ST_B6').multiply(0.00341802).add(149.0)
return image.addBands(optical_bands, None, True).addBands(
thermal_bands, None, True)
lsYear = lsYear.map(apply_scale_factors)
compositePy = lsYear.mean()
compositePy = compositePy.clip()
import ee
shp = ee.FeatureCollection('users/jdawsey/assets/20km_buffer')
lsYear = ee.ImageCollection('LANDSAT/LTO5/C02/T1_L2').filterDate((ee.Date('1990-06-01'), ee.Date('1990-09-30'))).filterBounds(shp)
# applies scaling factors
def apply_scale_factors(image):
optical_bands = image.select('SR_B.').multiply(0.0000275).add(-0.2)
thermal_bands = image.select('ST_B6').multiply(0.00341802).add(149.0)
return image.addBands(optical_bands, None, True).addBands(
thermal_bands, None, True)
lsYear = lsYear.map(apply_scale_factors)
compositePy = lsYear.mean()
compositePy = compositePy.clip(shp)
quit
### visibility parameters for the color image
visParam <- list(bands <- c('SR_B3', 'SR_B2', 'SR_B1'),
min= 0,
max= 0.3
#gamma = 0.5
)
Map$addLayer(compositeR, visParams= visParam)
compositeR <- py$compositePy
Map$addLayer(compositeR, visParams= visParam)
shp <- ee$FeatureCollection('users/jdawsey/assets/20km_buffer')
lsYear <- ee$ImageCollection('LANDSAT/LT05/C02/T1_L2') %>%
ee$ImageCollection$filterDate(ee$Date('1990-06-01'),
ee$Date('1990-09-30')) %>%
ee$ImageCollection$filterBounds(shp)
composite <- lsYear$map(py$apply_scale_factors)
###
shp <- ee$FeatureCollection('users/jdawsey/assets/20km_buffer')
clip <- composite$clip(shp)
composite <- lsYear$mean()
clip <- composite$clip(shp)
Map$addLayer(compositeR, visParams= visParam)
Map$addLayer(composite, visParams= visParam)
shp <- ee$FeatureCollection('users/jdawsey/assets/20km_buffer')
lsYear <- ee$ImageCollection('LANDSAT/LT05/C02/T1_L2') %>%
ee$ImageCollection$filterDate(ee$Date('1990-06-01'),
ee$Date('1990-09-30')) %>%
ee$ImageCollection$filterBounds(shp)
lsYear <- ee$Algorithms$Landsat$simpleComposite(lsYear)
### Running the function from python in r
composite <- lsYear$map(py$apply_scale_factors)
filtered <- lsYear$filter(ee$Filter$eq('CLOUD_COVER', 10))
lsYear <- ee$ImageCollection('LANDSAT/LT05/C02/T1_L2') %>%
ee$ImageCollection$filterDate(ee$Date('1990-06-01'),
ee$Date('1990-09-30')) %>%
ee$ImageCollection$filterBounds(shp)
filtered <- lsYear$filter(ee$Filter$eq('CLOUD_COVER', 10))
### Running the function from python in r
composite <- filtered$map(py$apply_scale_factors)
composite <- filtered$mean()
clip <- composite$clip(shp)
### visibility parameters for the color image
visParam <- list(bands <- c('SR_B3', 'SR_B2', 'SR_B1'),
min= 0,
max= 0.3
#gamma = 0.5
)
# centering and adding to map -- returning as white for some gd reason
Map$centerObject(shp)
Map$addLayer(composite, visParams= visParam)
lsYear <- ee$ImageCollection('LANDSAT/LT05/C02/T1_L2') %>%
ee$ImageCollection$filterDate(ee$Date('1990-06-01'),
ee$Date('1990-09-30')) %>%
ee$ImageCollection$filterBounds(shp) %>%
ee$ImageCollection$filter(ee$Filter$eq('CLOUD_COVER', 10))
### Running the function from python in r
composite <- lsYear$map(py$apply_scale_factors)
composite <- lsYear$mean()
clip <- composite$clip(shp)
### visibility parameters for the color image
visParam <- list(bands <- c('SR_B3', 'SR_B2', 'SR_B1'),
min= 0,
max= 0.3
#gamma = 0.5
)
# centering and adding to map -- returning as white for some gd reason
Map$centerObject(shp)
Map$addLayer(composite, visParams= visParam)
### DoG sharpening
fat <- ee$Kernel$gaussian(
radius = 3,
sigma = 3,
magnitude = -1.0,
units = 'pixels'
)
skinny <- ee$Kernel$gaussian(
radius = 3,
sigma = 0.5,
units = 'pixels'
)
dog <- fat$add(skinny)
sharpened <- clip$add(clip$convolve(dog))
###
### gaussian smoothing
gaussianKernel <- ee$Kernel$gaussian(
radius = 3,
units = 'pixels'
)
gauss <- sharpened$convolve(gaussianKernel)
###
### adding the sharpened then smoothed image to the map
Map$addLayer(gauss, visParams = visParam)
#Example
landsat <- ee$Image('LANDSAT/LT04/C01/T1/LT04_008067_19890917')
visParam <- list(bands <- c('B5', 'B4', 'B3'),
min= 0,
max= 128,
gamma = c(0.95, 1.1, 1)
)
Map$setCenter(lon=-77.20, lat=-9.85, zoom=10)
m1 <- Map$addLayer(landsat, visParams= visParam, name="SRTM", shown=TRUE)
m1
### visibility parameters for the color image
visParam <- list(bands <- c('SR_B3', 'SR_B2', 'SR_B1'),
min= 0,
max= 100
#gamma = 0.5
)
# centering and adding to map -- returning as white for some gd reason
Map$centerObject(shp)
Map$addLayer(composite, visParams= visParam)
shp <- ee$FeatureCollection('users/jdawsey/assets/20km_buffer')
lsYear <- ee$ImageCollection('LANDSAT/LT05/C02/T1_L2') %>%
ee$ImageCollection$filterDate(ee$Date('1990-06-01'),
ee$Date('1990-09-30')) %>%
ee$ImageCollection$filterBounds(shp)
lsYear <- ee$Algorithms$Landsat$simpleComposite(lsYear)
composite <- ee$Algorithms$Landsat$simpleComposite(lsYear)
clip <- composite$clip(shp)
### visibility parameters for the color image
visParam <- list(bands <- c('SR_B3', 'SR_B2', 'SR_B1'),
min= 0,
max= 100
#gamma = 0.5
)
# centering and adding to map -- returning as white for some gd reason
Map$centerObject(shp)
Map$addLayer(composite, visParams= visParam)
### visibility parameters for the color image
visParam <- list(bands <- c('SR_B3', 'SR_B2', 'SR_B1'),
min= 0,
max= 1
#gamma = 0.5
)
# centering and adding to map -- returning as white for some gd reason
Map$centerObject(shp)
Map$addLayer(composite, visParams= visParam)
### visibility parameters for the color image
visParam <- list(bands <- c('B3', 'B2', 'B1'),
min= 0,
max= 1
#gamma = 0.5
)
# centering and adding to map -- returning as white for some gd reason
Map$centerObject(shp)
Map$addLayer(composite, visParams= visParam)
composite <- ee$Algorithms$Landsat$simpleComposite(lsYear)
clip <- composite$clip(shp)
### visibility parameters for the color image
visParam <- list(bands <- c('B3', 'B2', 'B1'),
min= 0,
max= 1
#gamma = 0.5
)
Map$addLayer(clip, visParams= visParam)
### visibility parameters for the color image
visParam <- list(bands <- c('SRB3', 'SRB2', 'SRB1'),
min= 0,
max= 1
#gamma = 0.5
)
# centering and adding to map -- returning as white for some gd reason
Map$centerObject(shp)
Map$addLayer(clip, visParams= visParam)
### visibility parameters for the color image
visParam <- list(bands <- c('SR_B3', 'SR_B2', 'SR_B1'),
min= 0,
max= 1
#gamma = 0.5
)
# centering and adding to map -- returning as white for some gd reason
Map$centerObject(shp)
Map$addLayer(clip, visParams= visParam)
### visibility parameters for the color image
visParam <- list(bands <- c('SR_B3', 'SR_B2', 'SR_B1'),
min= 0,
max= 0.9
#gamma = 0.5
)
# centering and adding to map -- returning as white for some gd reason
Map$centerObject(shp)
Map$addLayer(clip, visParams= visParam)
composite <- lsYear$mosaic()
lsYear <- ee$ImageCollection('LANDSAT/LT05/C02/T1_L2') %>%
ee$ImageCollection$filterDate(ee$Date('1990-06-01'),
ee$Date('1990-09-30')) %>%
ee$ImageCollection$filterBounds(shp)
composite <- lsYear$mosaic()
clip <- composite$clip(shp)
### visibility parameters for the color image
visParam <- list(bands <- c('SR_B3', 'SR_B2', 'SR_B1'),
min= 0,
max= 0.9
#gamma = 0.5
)
# centering and adding to map -- returning as white for some gd reason
Map$centerObject(shp)
# centering and adding to map -- returning as white for some gd reason
Map$centerObject(shp)
Map$addLayer(clip, visParams= visParam)
### visibility parameters for the color image
visParam <- list(bands <- c('SR_B3', 'SR_B2', 'SR_B1'),
min= 0,
max= 0.1
#gamma = 0.5
)
# centering and adding to map -- returning as white for some gd reason
Map$centerObject(shp)
Map$addLayer(clip, visParams= visParam)
lsYear <- ee$ImageCollection('LANDSAT/LT05/C02/T1_L2') %>%
ee$ImageCollection$filterDate(ee$Date('1990-06-01'),
ee$Date('1990-09-30')) %>%
ee$ImageCollection$filterBounds(shp)
filtered <- lsYear$filter(ee$Filter$eq('CLOUD_COVER', 10))
composite <- lsYear$mosaic()
clip <- composite$clip(shp)
Map$addLayer(clip, visParams= visParam)
###ee_install()
library(rgee)
library(rgeeExtra)
library(reticulate)
# Initialize Earth Engine and GD
ee_Initialize(drive=TRUE)
knitr::opts_chunk$set(echo = TRUE)
shp <- ee$FeatureCollection('users/jdawsey/assets/20km_buffer')
lsYear <- ee$ImageCollection('LANDSAT/LT05/C02/T1') %>%
ee$ImageCollection$filterDate(ee$Date('1990-06-01'),
ee$Date('1990-09-30')) %>%
ee$ImageCollection$filterBounds(shp)
composite <- ee$Algorithms$Landsat$simpleComposite(lsYear)
clip <- composite$clip(shp)
###
### visibility parameters for the color image
visParam <- list(bands <- c('B3', 'B2', 'B1'),
min= 0,
max= 128,
gamma = 1.5
)
# centering and adding to map -- returning as white for some gd reason
Map$centerObject(shp)
Map$addLayer(clip, visParams= visParam)
### DoG sharpening
fat <- ee$Kernel$gaussian(
radius = 3,
sigma = 3,
magnitude = -1.0,
units = 'pixels'
)
skinny <- ee$Kernel$gaussian(
radius = 3,
sigma = 0.5,
units = 'pixels'
)
dog <- fat$add(skinny)
sharpened <- clip$add(clip$convolve(dog))
###
### gaussian smoothing
gaussianKernel <- ee$Kernel$gaussian(
radius = 3,
units = 'pixels'
)
gauss <- sharpened$convolve(gaussianKernel)
###
### adding the sharpened then smoothed image to the map
Map$addLayer(gauss, visParams = visParam)
### creating training samples for the unsupervised classification
training <- gauss$sample(
region = shp,
scale = 30, #change per resolution
numPixels = 10000
)
###
### the actual classification function
clusterer <- ee$Clusterer$wekaKMeans(12) %>%
ee$Clusterer$train(training)
result <- gauss$cluster(clusterer)
###
### creating a landcover pallete to view the result
landcoverPalette <- c(
'#00a944',
'#d6d6d6',
'#c65b8d',
'#ded132',
'#ff3434',
'#5bb48f',
'#47f37c',
'#7c0000',
'#ded132',
'#5bb48f',
'#b0ffa7',
'#778bff'
)
visPalette <- list(
min= 0,
max= 11,
palette = landcoverPalette
)
###
### adding maps to compare
classified <- Map$addLayer(result, visParams = visPalette)
imageryMap <- Map$addLayer(clip, visParams= visParam)
###
### creating training samples for the unsupervised classification
training <- gauss$sample(
region = shp,
scale = 30, #change per resolution
numPixels = 10000
)
###
### the actual classification function
clusterer <- ee$Clusterer$wekaKMeans(10) %>% # change clusters depending on imagery
ee$Clusterer$train(training)
result <- gauss$cluster(clusterer)
###
### creating a landcover pallete to view the result
landcoverPalette <- c(
'#00a944',
'#d6d6d6',
'#c65b8d',
'#ded132',
'#ff3434',
'#5bb48f',
'#47f37c',
'#7c0000',
'#ded132',
'#5bb48f',
'#b0ffa7',
'#778bff'
)
visPalette <- list(
min= 0,
max= 9, # change depending on number of clusters
palette = landcoverPalette
)
###
### adding maps to compare
classified <- Map$addLayer(result, visParams = visPalette)
imageryMap <- Map$addLayer(clip, visParams= visParam)
###
### showing the maps
classified | imageryMap
knitr::opts_chunk$set(echo = TRUE)
###ee_install()
library(rgee)
library(rgeeExtra)
library(reticulate)
# Initialize Earth Engine and GD
ee_Initialize(drive=TRUE)
